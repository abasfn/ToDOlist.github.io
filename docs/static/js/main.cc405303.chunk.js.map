{"version":3,"sources":["component/todolist.tsx","action/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","reduser/reduser.tsx"],"names":["ToDoList","container","useSelector","state","dispach","useDispatch","useState","input","setinpt","complete","filter","item","className","value","onKeyPress","e","key","type","paylood","title","onChange","target","map","index","checked","onClick","onChangeChekboxs","deleteItem","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","indexof","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAyDeA,EApDE,WAEb,IAAMC,EAAiBC,aAAY,SAAAC,GAAK,OAAIA,KACtCC,EAAUC,cAHG,EAIMC,mBAAiB,IAJvB,mBAIZC,EAJY,KAILC,EAJK,KAsBbC,EAAW,WACb,OAAOR,EAAUS,QAAO,SAACC,GAAD,OAAiC,IAAlBA,EAAKF,aAEhD,OACI,sBAAKG,UAAU,WAAf,UACI,gCACI,uBAAOC,MAAON,EAAOO,WAnBV,SAACC,GACN,UAAVA,EAAEC,MAEFZ,ECdL,CACHa,KAAK,WACLC,QDWuC,CAAEC,MAAOZ,EAAOE,UAAU,KAEzDD,EAAQ,MAe6CY,SAvBvC,SAACL,GACnBP,EAAQO,EAAEM,OAAOR,UAuBRZ,EAAUqB,KAAI,SAACX,EAAWY,GACvB,OACI,sBAAKX,UAAU,OAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,uBAAOY,QAASb,EAAKF,SAAUgB,QAAS,kBAd3C,SAACF,GACtBnB,ECVO,CACHa,KAAK,kBACLC,QDQkBK,IAagDG,CAAiBH,IAAQX,UAAU,WAAWK,KAAK,cAC9E,IAAlBN,EAAKF,SAAoB,6BAAI,8BAAME,EAAKQ,UACnC,6BAAKR,EAAKQ,WAEpB,wBAAQM,QAAS,kBArBtB,SAACF,GAChBnB,ECbG,CACHa,KAAK,cACLC,QDWeK,IAoB4BI,CAAWhB,IAAOC,UAAU,SAAnD,0BAIZ,sBAAKA,UAAU,OAAf,UACI,+BAAKX,EAAU2B,OAASnB,IAAWmB,OAAnC,eACA,+BAAKnB,IAAWmB,OAAhB,yBAGR,4BExCGC,MANf,WACE,OACE,cAAC,EAAD,KCOWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCIRQ,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,aCZS,WAA0C,IAAzCzC,EAAwC,uDAApB,GAAI0C,EAAgB,uCAC5D,GAAoB,aAAhBA,EAAO5B,KAGP,OADAd,EAAK,sBAAOA,GAAP,CAAc0C,EAAO3B,UAGzB,GAAoB,gBAAhB2B,EAAO5B,KAGZ,OADAd,EAAQA,EAAMO,QAAO,SAACC,GAAD,OAAoBA,GAAQkC,EAAO3B,WAGvD,GAAoB,oBAAhB2B,EAAO5B,KAA4B,CAExC,IAAI6B,EAAU3C,EAAM0C,EAAO3B,SAAST,SACpC,OAAgB,IAAZqC,GACA3C,EAAM0C,EAAO3B,SAAST,UAAW,EAC1B,YAAIN,KAEfA,EAAM0C,EAAO3B,SAAST,UAAW,EAC1B,YAAIN,IAEf,OAAO,YAAIA,KDTmBoC,KAClCQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.cc405303.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddList, remove, setcheckboxes } from '../action';\r\nimport { ToDoItem } from '../models/i';\r\nimport './todolist.css';\r\nconst ToDoList = () => {\r\n\r\n    const container: any = useSelector(state => state);\r\n    const dispach = useDispatch();\r\n    const [input, setinpt] = useState<string>('')\r\n    const onChangeInput = (e: any) => {\r\n        setinpt(e.target.value)\r\n    }\r\n\r\n    const handleKeyPress = (e: any) => {\r\n        if (e.key === 'Enter') {\r\n            const initialState: ToDoItem = { title: input, complete: false }\r\n            dispach(AddList(initialState))\r\n            setinpt('')\r\n        }\r\n    }\r\n    const deleteItem = (index: any) => {\r\n        dispach(remove(index))\r\n    }\r\n    const onChangeChekboxs = (index: any) => {\r\n        dispach(setcheckboxes(index))\r\n    }\r\n    const complete = () => {\r\n        return container.filter((item: any) => item.complete === true);\r\n    }\r\n    return (\r\n        <div className=\"contaner\">\r\n            <div>\r\n                <input value={input} onKeyPress={handleKeyPress} onChange={onChangeInput} />\r\n                {container.map((item: any, index: any) => {\r\n                    return (\r\n                        <div className=\"left\">\r\n                            <div className=\"item-and-chekboxs\">\r\n                                <input checked={item.complete} onClick={() => onChangeChekboxs(index)} className=\"checkbox\" type=\"checkbox\" />\r\n                                {item.complete === true ? <li><del>{item.title}</del></li>\r\n                                    : <li>{item.title}</li>}\r\n                            </div>\r\n                            <button onClick={() => deleteItem(item)} className=\"delete\">Delete</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div className=\"text\">\r\n                    <h2>{container.length - complete().length}task left</h2>\r\n                    <h2>{complete().length}task complete</h2>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ToDoList;","import { ToDoItem } from \"../models/i\"\r\n\r\nexport const AddList = (item:ToDoItem) => {\r\nreturn {\r\n    type:\"ADD-LIST\",\r\n    paylood:item\r\n}\r\n}\r\nexport const remove = (item:string) => {\r\n    return {\r\n        type:\"REMOVE-LIST\",\r\n        paylood:item\r\n    }\r\n    }\r\n    export const setcheckboxes = (item:string) => {\r\n        return {\r\n            type:\"SET-CHECK-BOXES\",\r\n            paylood:item\r\n        }\r\n        }","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ToDoList from './component/todolist';\n\nfunction App() {\n  return (\n    <ToDoList />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { reduser } from './reduser/reduser';\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n  }\n}\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reduser,composeEnhancers())\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { ToDoItem } from \"../models/i\";\r\n\r\nexport const reduser = (state: ToDoItem[] = [], action: any) => {\r\n    if (action.type === \"ADD-LIST\") {\r\n        // debugger;\r\n        state = [...state, action.paylood]\r\n        return state;\r\n    }\r\n    else if (action.type === \"REMOVE-LIST\") {\r\n        // debugger;\r\n        state = state.filter((item: ToDoItem) => item != action.paylood)\r\n        return state;\r\n    }\r\n    else if (action.type === \"SET-CHECK-BOXES\") {\r\n        // debugger;\r\n        let indexof = state[action.paylood].complete\r\n        if (indexof === true) {\r\n            state[action.paylood].complete = false\r\n            return [...state]\r\n        }\r\n        state[action.paylood].complete = true\r\n        return [...state]\r\n    }\r\n    return [...state]\r\n}\r\n"],"sourceRoot":""}